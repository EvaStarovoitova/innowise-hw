// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ex4.Data;

#nullable disable

namespace ex4.Migrations
{
    [DbContext(typeof(LibraryContext))]
    partial class LibraryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.10");

            modelBuilder.Entity("ex4.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(1888, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "автор1"
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(1999, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "автор2"
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(1777, 7, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "фвтор3"
                        });
                });

            modelBuilder.Entity("ex4.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AuthorId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("PublishedYear")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            PublishedYear = new DateTime(2014, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "книга1"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            PublishedYear = new DateTime(1920, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "книга2"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 2,
                            PublishedYear = new DateTime(1799, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "книга3"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 3,
                            PublishedYear = new DateTime(2016, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "книга4"
                        });
                });

            modelBuilder.Entity("ex4.Models.Book", b =>
                {
                    b.HasOne("ex4.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("ex4.Models.Author", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
